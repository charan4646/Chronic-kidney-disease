# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load the CKD dataset (you can replace this with your own data)
# Assume the dataset has features (X) and labels (y)
# X should contain relevant features (e.g., age, blood pressure, etc.)
# y should contain binary labels (0 for no CKD, 1 for CKD)
# Replace 'your_dataset.csv' with the actual dataset file
data = pd.read_csv('your_dataset.csv')

# Split data into features (X) and labels (y)
X = data.drop(columns=['CKD_Label'])  # Adjust column name
y = data['CKD_Label']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardize features (optional but recommended)
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Create a Decision Tree classifier
clf = DecisionTreeClassifier(random_state=42)

# Train the model
clf.fit(X_train_scaled, y_train)

# Make predictions
y_pred = clf.predict(X_test_scaled)

# Evaluate model performance
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")

# Generate a classification report
print(classification_report(y_test, y_pred))
